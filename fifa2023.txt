
--teams tabel
create table teams
(
    id int primary key,
    team_name varchar(50),
    abbreviation varchar(3),
    wins_total int,
    losses_total int,
    ties_total int,
    goals_total int,
    conceded_goals_total int,
    flag varchar(50)
);

--players tabel
create table players
( 
    id int,
    player_first_name varchar(50),
    player_last_name varchar(50),
    player_position varchar(50),
    player_number int,
    player_goals int,
    player_assists int,
    player_yellow_cards int,
    player_red_cards int,
    minutes_played int,
    matches_played int,
    mathes_started int,
    team_id int,
    foreign key (team_id) references teams(id)
);

--matches tabel
create table matches
(
    id int,
    match_date date,
    match_time time,
    match_leanght int,
    group_name varchar(50),
    match_type varchar(50),
    match_concluded_by varchar(50),
    match_penalty bit,
    match_location varchar(50),
    match_head_referee varchar(50),
    match_attendance int,
    match_home_team_shot int,
    match_away_team_shot int,
    match_home_team_goals int,
    match_away_team_goals int,
    match_home_team_id int,
    match_away_team_id int,
    foreign key (match_home_team_id) references teams(id),
    foreign key (match_away_team_id) references teams(id)
);

--goals tabel
create table goals
(
    id int,
    goal_minute int,
    goal_scorer_id int,
    goal_assist_id int,
    goal_match_id int,
    foreign key (goal_scorer_id) references players(id),
    foreign key (goal_assist_id) references players(id),
    foreign key (goal_match_id) references matches(id)
);

--cards tabel
create table cards
(
    id int,
    card_minute int,
    card_player_id int,
    card_match_id int,
    card_type varchar(50),
    foreign key (card_player_id) references players(id),
    foreign key (card_match_id) references matches(id)
);

--venues tabel
create table venues
(
    id int,
    venue_name varchar(50),
    venue_city varchar(50),
    venue_capacity int,
    venue_team_id int,
    foreign key (venue_team_id) references teams(id)
);

--coaches tabel
create table coaches
(
    id int,
    coach_first_name varchar(50),
    coach_last_name varchar(50),
    coach_team_id int,
    foreign key (coach_team_id) references teams(id)
);

--referees tabel
create table referees
(
    id int,
    referee_first_name varchar(50),
    referee_last_name varchar(50),
    referee_age int,
    referee_country varchar(50)
);


--Code Awnsers
List all games today = select * from matches where match_date = '2023-08-05'

List a teamâ€™s matches and results. = 

List a group table with teams, wins, draws, losses, goal difference and points.

List the top-10 players sorted first by goals, then by assists

List all players that are unavailable due to disciplinary reasons (i.e 2 yellow cards or 1 red card)

List a teams roster with players and coach, goals, assists, shots and disciplinary, matches played, matches started, minutes played. Number of clean sheets and save percentage for the goalkeepers.

Detailed info for a finished game including teams, players, goals, disciplinary, substitutions, referee, venue, date. Every situation often includes one or more players, a time and sometimes additional info

Short info (teams, flags, abbreviations, score) for the same game as above.

List the playoff tree with team abbreviations and -flags, score (if any)/date and time if no result.

-- python code 

# update tables with red and yellow cards
import pandas as pd

df = pd.read_csv("../csv/cards.csv")

# update card_type column with yellow randomly to 15% of the rows
df.loc[df.sample(frac=0.15).index, "card_type"] = "yellow"
# update card_type column with red randomly to 7% of the rows
df.loc[df.sample(frac=0.07).index, "card_type"] = "red"

df.to_csv("../csv/cards.csv", index=False)

